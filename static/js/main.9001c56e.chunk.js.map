{"version":3,"sources":["components/DogImage.js","components/DogDetails.js","components/DogGrid.js","components/CustomSearch.js","components/Home.js","App.js","index.js"],"names":["DogImage","name","sub","code","useState","dogsUrl","setDogsUrl","useEffect","fetch","then","res","json","data","message","length","map","url","className","src","alt","DogDetails","show","setShow","camelize","str","charAt","toUpperCase","slice","Modal","onHide","Header","closeButton","Title","Body","item","index","style","textAlign","margin","DogGrid","dogs","ar","tempName","setTempName","tempSub","setTempSub","Object","entries","key","value","padding","items","onClick","setName","setSub","CustomSearch","bread","setBread","count","setCount","statement","setStatement","images","setImages","Container","fluid","Row","Col","onChange","e","target","console","log","type","placeholder","marginTop","Button","variant","event","preventDefault","catch","Home","setDogs","Navbar","bg","Brand","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9001c56e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../App.css'\r\nfunction DogImage({name, sub, code}) {\r\n\r\n    const [dogsUrl, setDogsUrl] = useState([])\r\n\r\n    useEffect(()=>{   \r\n        switch(code){\r\n            case \"solo\":{\r\n                fetch('https://dog.ceo/api/breed/'+name+'/images/random')\r\n                .then(res=>res.json())\r\n                .then(data=>{\r\n                    setDogsUrl([data.message])            \r\n                })\r\n                break;\r\n            }\r\n            case \"sub\":{\r\n                fetch('https://dog.ceo/api/breed/'+name+'/'+sub+'/images/random')\r\n                .then(res=>res.json())\r\n                .then(data=>{\r\n                    setDogsUrl([data.message])  \r\n                    //console.log(dogsUrl);          \r\n                })\r\n                break;\r\n            }\r\n            case \"more\":{                \r\n                fetch('https://dog.ceo/api/breed/'+name+'/images/random/4')\r\n                .then(res=>res.json())\r\n                .then(data=>{\r\n                    setDogsUrl(data.message)     \r\n                })                            \r\n                break;\r\n            }\r\n            case \"custom\":{\r\n                setDogsUrl([sub])\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }      \r\n        \r\n    },[name])\r\n\r\n    return (\r\n        <>   \r\n        {(dogsUrl.length>0)?\r\n            dogsUrl.map(url=>{\r\n                return (<img \r\n                    className=\"img-fluid resize\"\r\n                    src={url} \r\n                    alt=\"Not found\"\r\n                /> )\r\n            })\r\n            :\"\"\r\n        }                           \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DogImage\r\n","import React from 'react'\r\nimport DogImage from './DogImage'\r\nimport \"../App.css\"\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nfunction DogDetails({show, setShow, name, sub}) {\r\n\r\n    const camelize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1); \r\n    }   \r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={ () => setShow(false) } className=\"modal-dialog-scrollable \">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{camelize(name)}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div >\r\n                        <h3>Sub Breads</h3>\r\n                        <div className=\"d-flex flex-lg-wrap\">            \r\n                            {(sub.length>0)\r\n                            ?\r\n                                sub.map((item, index) => {\r\n                                    return (\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <DogImage key={index} name={name} sub={item} code={\"sub\"}/>\r\n                                        <p>{camelize(item)}</p>\r\n                                    </div>\r\n                                    )\r\n                                })\r\n                            :\r\n                                <p>No sub-breads found!</p>\r\n                        }\r\n                        </div>                        \r\n                    </div>\r\n                    <div>\r\n                        <h3>More Images</h3>                                                                                                     \r\n                            <DogImage name={name} code={\"more\"} style={{margin:\"5px\"}}/>                                                                                                      \r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DogDetails\r\n","import React, { useState } from 'react'\r\n\r\nimport DogImage from './DogImage'\r\nimport DogDetails from './DogDetails'\r\n\r\nfunction DogGrid({dogs}) {\r\n    let ar = [];\r\n    const [show, setShow] = useState(false);\r\n    const [tempName, setTempName] = useState(\"\");\r\n    const [tempSub, setTempSub] = useState([]);\r\n\r\n    for (const [key, value] of Object.entries(dogs)) {\r\n        ar = [...ar, {name: key, sub: value}];\r\n    }\r\n\r\n    const handleShow =  (name, sub) => {          \r\n        setTempName(name);\r\n        setTempSub(sub);\r\n        setShow(true);\r\n    }\r\n    const camelize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1); \r\n    }\r\n    \r\n    return (\r\n        <div className=\"d-flex flex-lg-wrap\" style={{padding:\"5px\"}}>\r\n            {(ar.length>0)?\r\n                ar.map((items, index)=>{\r\n                    return(\r\n                        <div onClick={()=>handleShow(items.name, items.sub)} style={{textAlign:\"center\"}} >                            \r\n                            <DogImage key={index} name={items.name} code={\"solo\"} />\r\n                            <p>{camelize(items.name)}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            :\r\n            \"Loading..\"\r\n            }\r\n            <DogDetails show={show} setShow={setShow} name={tempName} setName={setTempName} sub={tempSub} setSub={setTempSub} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DogGrid\r\n","import React, { useState } from 'react'\r\nimport DogImage from './DogImage'\r\nimport { Modal, Container, Row, Col, Button  } from 'react-bootstrap'\r\nimport \"../App.css\"\r\n\r\nfunction CustomSearch({show, setShow, dogs}) {\r\n    let ar = [];\r\n    const [bread, setBread] = useState(\"\")\r\n    const [count, setCount] = useState(0)\r\n    const [statement, setStatement] = useState(\"\")\r\n    const [images, setImages] = useState([])\r\n    \r\n    for (const [key] of Object.entries(dogs)) {\r\n        ar = [...ar, key];\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setBread(\"\")\r\n        setImages([])\r\n        setCount(0)\r\n        setStatement(\"\")\r\n        setShow(false)\r\n    };\r\n\r\n    const camelize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1); \r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        if(count > 0 && bread !== \"\"){\r\n            event.preventDefault();       \r\n            setStatement('Showing \"'+count+'\" images of \"'+camelize(bread)+'\"')\r\n            setImages([])\r\n            fetch(\"https://dog.ceo/api/breed/\"+bread+\"/images/random/\"+count)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                setImages(res.message)\r\n            }).catch(e=>{\r\n                console.log(e);\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Modal show={show} onHide={handleClose} className=\"modal-dialog-scrollable\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Custom Search</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body >\r\n                <div>\r\n                    <Container fluid=\"md\">\r\n                        <Row>\r\n                            <Col className=\"text-center\">\r\n                                <select className=\"input\" onChange={(e)=>{setBread(e.target.value);console.log(bread) }}>\r\n                                    <option>Select a bread</option>\r\n                                    {\r\n                                        ar.map(item=>{\r\n                                            return(<option value={item}>{camelize(item)}</option>)\r\n                                        }) \r\n                                    }                            \r\n                                </select>\r\n                            </Col>\r\n                            <Col>\r\n                                <input className=\"input\" type=\"number\" placeholder=\"Number of Images\" onChange={(e)=>{setCount(e.target.value)}}/>                                                        \r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{marginTop:\"10px\"}}>\r\n                            <Col className=\"text-center\">\r\n                                <Button variant=\"success\" onClick={handleSubmit}>\r\n                                    Get Images\r\n                                </Button> \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>                       \r\n                </div >\r\n                <div style={{margin:\"10px\"}}>\r\n                    {statement}\r\n                </div>\r\n                <div className=\"d-flex flex-lg-wrap align-content-center\">                                                \r\n                            {(images.length>0)?\r\n                                images.map((item, index) => {\r\n                                    return <DogImage key={index} sub={item} code={\"custom\"} style={{margin:\"5px\"}}/>\r\n                                })\r\n                            :\"\"\r\n                            }                          \r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>   \r\n    </>\r\n    )\r\n}\r\n\r\nexport default CustomSearch\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Button } from 'react-bootstrap'\r\nimport DogGrid from './DogGrid'\r\nimport CustomSearch from './CustomSearch'\r\n\r\nfunction Home() {\r\n\r\n    const [dogs, setDogs] = useState([])\r\n    const [show, setShow] = useState(false);    \r\n    \r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    useEffect(()=>{        \r\n        fetch('https://dog.ceo/api/breeds/list/all')\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setDogs(data.message)            \r\n        })\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand className=\"ml-auto p-1\">Dog Gallery</Navbar.Brand>\r\n                <Button variant=\"success\" className=\"ml-auto p-2\" onClick={()=>handleShow()}>Custom Search</Button>\r\n            </Navbar>\r\n            <DogGrid dogs={dogs}/>\r\n            <CustomSearch show={show} setShow={setShow} dogs={dogs}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\r\nimport Home from './components/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}